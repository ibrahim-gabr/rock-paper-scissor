{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Home.svelte",
    "../../Picked.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Home from \"./Home.svelte\";\n    import {Router, Link, Route} from \"svelte-routing\";\n\n    export let url = \"\";\n    import Loadable from \"svelte-loadable\";\n    import Header_game from './Header_game.svelte'\n    import Rules from \"./Rules.svelte\";\n    import {playerScore} from \"./playerscore\";\n    let yourScore\n    playerScore.subscribe(value => {\n        yourScore = value\n        console.log(value,'value')\n    })\n</script>\n\n<style>\n    .container{\n        display: grid;\n        grid-template-rows: 0.5fr 5fr 0.5fr;\n        grid-row-gap: 4rem;\n        height: 100vh;\n    }\n    @media screen and (min-width: 768px) {\n        .container {\n            grid-row-gap: 6rem;\n        }\n    }\n</style>\n\n<main>\n    <Router url=\"{url}\">\n        <div class=\"container mx-auto  px-8 \">\n            <Header_game yourScore={yourScore} />\n            <Route path=\"picked\">\n                <Loadable loader={() => import(\"./Picked.svelte\")} />\n            </Route>\n            <Route path=\"/\"><Home /></Route>\n            <Rules />\n        </div>\n    </Router>\n</main>\n",
    "<script>\n    import Rock from \"./Rock.svelte\";\n    import Scissors from \"./Scissors.svelte\";\n    import Paper from \"./Paper.svelte\";\n    import { navigate } from \"svelte-routing\";\n    import {playerSelected} from './store'\n\n    let selectedImage\n    function browse(e){\n        selectedImage = e\n        playerSelected.update(value => {\n            value = selectedImage\n            return value = selectedImage\n        })\n        navigate(\"/picked\", { replace: true })\n    }\n\n\n</script>\n    <!--icons for paper rock scissors-->\n<div class=\"images my-auto mx-auto relative bg-no-repeat bg-contain bg-center \" style=\"background-image: url(./img/bg-triangle.svg);\">\n    <div class=\"paper absolute\" id=\"paper\"  on:click={ () => browse(\"paper\")}>\n        <Paper />\n    </div>\n    <div class=\"scissors absolute\" id=\"scissors\"  on:click={ () => browse(\"scissors\")}>\n        <Scissors />\n    </div>\n    <div class=\"rock absolute\" on:click={ () => browse(\"rock\")}>\n        <Rock />\n    </div>\n</div>\n<style>\n    .images{\n        width: 305px;\n        height: 277px;\n    }\n    .rock{\n        left: calc((50% - 3rem));\n        top:calc(100% - 6rem);\n    }\n    .paper{\n        left: -1rem;\n        top:-3rem;\n    }\n    .scissors{\n        right: -1rem;\n        top:-3rem;\n    }\n\n\n\n</style>",
    "<script>\n    import {playerSelected} from './store'\n    import {playerScore} from  './playerscore'\n    import Paper from \"./Paper.svelte\";\n    import Scissors from \"./Scissors.svelte\";\n    import Rock from \"./Rock.svelte\";\n    import {navigate} from \"svelte-routing\";\n    import {onMount} from 'svelte'\n\n    let cards = ['paper','scissors' , 'rock']\n    let randomCard\n    let pcPoints\n    let playerPoints\n    let winner\n    setTimeout(function(){\n         randomCard = cards[Math.floor(Math.random() * cards.length)];\n        evaluate()\n        playerScore.update(value => {\n            value = playerPoints\n            return value = playerPoints\n        })\n    },1000)\n\n    let selectedImage\n    playerSelected.subscribe(value => {\n        selectedImage = value\n    })\n\n    function browse(){\n        navigate(\"/\", { replace: true })\n    }\n\nonMount(() => {\n        playerScore.subscribe(value => {\n            playerPoints = value\n        })\n    })\n\n    function evaluate(){\n        if(selectedImage === \"paper\" && randomCard===\"scissors\"){\n            winner = \"pc\"\n            pcPoints = pcPoints +1\n        }\n        if(selectedImage === \"paper\" && randomCard===\"rock\"){\n            winner = \"player\"\n            playerPoints = playerPoints + 1\n        }\n        if(selectedImage === \"scissors\" && randomCard===\"paper\"){\n            winner = \"player\"\n            playerPoints = playerPoints +1\n        }\n        if(selectedImage === \"scissors\" && randomCard===\"rock\"){\n            winner = \"pc\"\n            pcPoints = pcPoints +1\n        }\n        if(selectedImage === \"rock\" && randomCard===\"paper\"){\n            winner = \"pc\"\n            pcPoints = pcPoints +1\n        }\n        if(selectedImage === \"rock\" && randomCard===\"scissors\"){\n            winner = \"player\"\n            playerPoints = playerPoints + 1\n        }\n        if(selectedImage === randomCard){\n            winner = \"even\"\n        }\n\n\n    }\n\n</script>\n<div class=\"picked flex flex-col justify-center items-center\">\n\n<div class=\"flex justify-between w-full h-full\">\n\n    <div class=\"flex flex-col justify-center items-center\" >\n        <h2 class=\"text-white mb-4\">YOU PICKED</h2>\n        {#if selectedImage===\"paper\"}\n            <Paper />\n        {:else if selectedImage===\"scissors\"}\n            <Scissors />\n        {:else if selectedImage===\"rock\"}\n            <Rock />\n\n        {/if}\n    </div>\n\n    <div class=\"flex flex-col justify-center items-center\">\n        <h2 class=\"text-white mb-4\">THE HOUSE PICKED</h2>\n\n        {#if randomCard===\"paper\"}\n            <Paper />\n        {:else if randomCard===\"scissors\"}\n            <Scissors />\n        {:else if randomCard===\"rock\"}\n            <Rock />\n        {:else}\n            <div class=\" pc-card w-16 h-16 md:w-24 md:h-24 rounded-full flex  justify-center items-center\">\n            </div>\n        {/if}\n    </div>\n\n</div>\n    {#if randomCard}\n    <div class=\"result text-white font-bold \">\n        <div class=\"winner text-4xl\">\n            <h3>YOU\n                {#if winner===\"pc\"}\n                    LOSE\n                    {:else if winner===\"player\"}\n                            WIN\n                    {:else if winner===\"even\"}\n                    ARE EVEN\n                            {/if}\n            </h3>\n        </div>\n        <div class=\"playagain text-center mt-4\"  on:click={ () => browse()}>\n            <a class=\"bg-gray-100  rounded-md text-gray-900 py-4 px-8\">PLAY AGAIN</a>\n        </div>\n    </div>\n        {/if}\n</div>\n\n<style>\n    .pc-card{\n        background-color: rgba(255,255,255,0.1);\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AAiBI,wBAAU,CAAC,AACP,OAAO,CAAE,IAAI,CACb,kBAAkB,CAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CACnC,YAAY,CAAE,IAAI,CAClB,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAClC,UAAU,cAAC,CAAC,AACR,YAAY,CAAE,IAAI,AACtB,CAAC,AACL,CAAC;ACKD,sBAAO,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,AACjB,CAAC,AACD,oBAAK,CAAC,AACF,IAAI,CAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CACxB,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,AACzB,CAAC,AACD,qBAAM,CAAC,AACH,IAAI,CAAE,KAAK,CACX,IAAI,KAAK,AACb,CAAC,AACD,wBAAS,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,IAAI,KAAK,AACb,CAAC;AC6ED,uBAAQ,CAAC,AACL,gBAAgB,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,AAC3C,CAAC"
}